generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  coins         Int          @default(0)
  accounts      Account[]
  sessions      Session[]
  generations   Generation[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Generation {
  id        String   @id @default(uuid())
  userId    String
  imagesURL String[]
  prompt    String
  createdAt DateTime @default(now())

  user             User              @relation(fields: [userId], references: [id])
  generationParams GenerationParams?
}

model GenerationParams {
  id                String   @id @default(uuid())
  shape             String
  model             String
  colorName         String
  generationsNumber Int
  styles            String[]
  generationId      String   @unique

  generation Generation @relation(fields: [generationId], references: [id])
}
